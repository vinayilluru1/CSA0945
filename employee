class Employee {
    protected String name;
    protected int id;
    protected double salary;

    public Employee(String name, int id, double salary) {
        this.name = name;
        this.id = id;
        this.salary = salary;
    }

    public void displayDetails() {
        System.out.println("Name: " + name);
        System.out.println("ID: " + id);
        System.out.println("Salary: $" + salary);
    }
}

class Manager extends Employee {
    private int teamSize;

    public Manager(String name, int id, double salary, int teamSize) {
        super(name, id, salary);
        this.teamSize = teamSize;
    }

    public void manageTeam() {
        System.out.println(name + " is managing a team of " + teamSize + " employees.");
    }
    public void displayDetails() {
        super.displayDetails();
        System.out.println("Team Size: " + teamSize);
    }
}

class SalesPerson extends Employee {
    private double salesTarget;

    public SalesPerson(String name, int id, double salary, double salesTarget) {
        super(name, id, salary);
        this.salesTarget = salesTarget;
    }

    public void makeSale(double amount) {
        System.out.println(name + " made a sale of $" + amount);
        if (amount >= salesTarget) {
            System.out.println("Congratulations! Target achieved.");
        } else {
            System.out.println("Need $" + (salesTarget - amount) + " more to meet the target.");
        }
    }

    public void displayDetails() {
        super.displayDetails();
        System.out.println("Sales Target: $" + salesTarget);
    }
}

public class R192473011 {
    public static void main(String[] args) {
        Manager manager = new Manager("vinay", 101, 80000, 5);
        System.out.println("=== Manager Details ===");
        manager.displayDetails();
        manager.manageTeam();

        System.out.println();

        SalesPerson salesPerson = new SalesPerson("vin", 102, 50000, 20000);
        System.out.println("=== SalesPerson Details ===");
        salesPerson.displayDetails();
        salesPerson.makeSale(15000);
    }
}
